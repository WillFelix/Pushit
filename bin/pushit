#!/bin/bash

redmine() {
	token="60a90e73475a3e486871ba69f89a865d4043abb0"
	number=$1
	curl -v -H "Content-Type: application/json" -X PUT -d "{ \"issue\": { \"id\": \"$number\", \"status_id\": \"2\" } }" -H "X-Redmine-API-Key: $token" http://suporte.cers.com.br/issues/$number.json
}

pushit() {
	branch=$3
	if [ "$branch" == "" ]; then
		branch="$(git branch | grep '* ' | sed -e 's/* //g')"
	fi

	message="$1$2"
	if [ "$message" == "" ]; then
		printf 'Please, enter the CR number with the option -n, or describe it using the option -m\n\n'
		exit 1;
	fi

	echo ""
	printf ':: Commit: %s\n' "$message"
	printf ':: Branch: %s\n\n\n' "$branch"

	read -p "Do you want continue? [y|N] " push
	if [ "$push" == "y" ] || [ "$push" == "Y" ]; then
		echo ""
		git add -A && git commit -m "$message" && git pull origin $branch && git push origin $branch
		if [ $1 != "" ]; then
			redmine $number
		fi
	fi

	printf "\nFatality...\n"
}

setup() {
	printf "If you enter 'ctrl + c' will cancel the proccess\n"
	echo "-------------------------------------------"
	echo

	read -p "Enter the CR number: " number
	read -p "Do you wanna put some message? [y|N] " hasMessage

	if [ "$hasMessage" != 'Y' ] && [ "$hasMessage" != 'y' ]; then
		pushit "CR #$number"
		exit 1;
	fi

	read -p "Commit message: " message
	pushit "CR #$number" " | $message"
}

help() {
	printf '\nUsage:\n'
	printf '  pushit [options] [value]\n\n'

	printf 'Options:\n'
	printf '  %s:\t# This option is preceded by the commit message.\n' "-m"
	printf '  %s:\t# CR number.\n' "-n"
	printf '  %s:\t# git pull: Fetch from and integrate with another repository or a local branch.\n' "-p"
	printf '  %s:\t# Which branch to use. If this option does not be called, the current branch will be used.\n\n' "-b"

	printf 'Pushit Option:\n'
	printf '  %s:\t# Show this help message and quit\n\n' "-h"

	printf 'Description:\n'
	printf '  The pushit command is a shortcut for the git commands.\n'
	printf '  Its the junction of %s ' "git add -A && git commit -m [message] && git pull origin [branch] && git push origin [branch]"
	printf '\n\n'

	printf 'Example:\n'
	printf '  pushit %s 1532 %s' "-n" "-m 'Adjustments to the search method in productDAO' "
	printf '\n\n'
}

version() {
	printf 'version: 1.0.0\n'
}

main() {

	if [ $# -eq 0 ]; then
		setup
	elif [ $1 == '-h' -o $1 == 'help' ]; then
		help
	elif [ $1 == '-v' -o $1 == 'version' ]; then
		version
	elif [ $1 == '-p' -o $1 == 'pull' ]; then
		branch="$(git branch | grep '* ' | sed -e 's/* //g')"
		git pull origin $branch
	elif [ $1 == '-s' -o $1 == 'status' ]; then
		git status
	else
		message=''
		number=''
		branch=''
		while getopts ":m:b:n:" arg; do
			case $arg in
				m)
					message="$OPTARG"
					;;
				b)
					branch=$OPTARG
					;;
				n)
					number="CR: #$OPTARG "
					;;
				*)
					printf "Invalid option. Use -h option to open the help text.\n"
					exit 1;
					;;
			esac
		done

		if [ "$message" != "" ] && [ "$number" != "" ]; then
			message=" | $message"
		fi

		pushit $number $message $branch
	fi

	exit 1;
}


main "$@"
